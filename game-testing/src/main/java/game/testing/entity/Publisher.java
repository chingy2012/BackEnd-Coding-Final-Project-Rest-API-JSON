package game.testing.entity;

import java.util.HashSet;
import java.util.Set;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import lombok.Data;

@Entity // Marks this class as a JPA entity mapped to a table in the database
@Data // Lombok annotation to auto-generate getters, setters, toString, equals, and hashCode
public class Publisher {

	@Id // Marks this field as the primary key
	@GeneratedValue(strategy = GenerationType.IDENTITY) // ID is auto-generated by the database
	private Long publisherId;

	// Basic attributes for the Publisher
	private String publisherName;
	private String publisherEmail;
	private String publisherPhone;
	private String location;
	private double rating;

	/**
	 * One-to-many relationship: A publisher can have many games.
	 * 
	 * - `cascade = CascadeType.ALL` means that all JPA operations (persist, merge, remove, etc.)
	 *   performed on Publisher will also be applied to its associated games.
	 * 
	 * - `orphanRemoval = true` ensures that if a game is removed from the `games` set,
	 *   it will also be deleted from the database.
	 * 
	 * - `mappedBy = "publisher"` specifies that the `publisher` field in the `Game` entity
	 *   owns the relationship (i.e., this is the inverse side).
	 */
	@OneToMany(cascade = CascadeType.ALL, orphanRemoval = true, mappedBy = "publisher")
	private Set<Game> games = new HashSet<>(); // Set of games published by this publisher
}
